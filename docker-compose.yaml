version: "2.1"
services:

  kafka:
    container_name: example-app-kafka
    image: "confluentinc/cp-enterprise-kafka:5.2.1"
#    volumes:
#      - kafka-data:/var/lib/kafka
#    networks:
#      - capi-network
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 10
      KAFKA_COMPRESSION_TYPE: gzip
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_JMX_PORT: 9091
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # For more details see See https://rmoff.net/2018/08/02/kafka-listeners-explained/

      # procotol needs to be called PLAINTEXT due to bug in schema-registry, see below
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL_PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL_PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

    depends_on:
      zookeeper:
        condition: service_started
    links:
      - zookeeper
    healthcheck:
      test: "nc -z localhost 9092"
      interval: 10s
      timeout: 5s
      retries: 15

  kafkahq:
    container_name: example-app-kafkahq
    links:
      - zookeeper
    image: tchiotludo/kafkahq
#    networks:
#      - capi-network
    ports:
      - 9090:8080
    environment:
      KAFKAHQ_CONFIGURATION: |
        kafkahq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"

  zookeeper:
    container_name: example-app-zookeeper
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
#    networks:
#      - capi-network
#    volumes:
#      - zookeeper-data:/var/lib/zookeeper/data
#      - zookeeper-log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry
    depends_on:
      - kafka
      - zookeeper
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      # bug re this: https://github.com/confluentinc/schema-registry/issues/648
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_DEBUG: "true"
    ports:
      - "8081:8081"

#networks:
#  capi-network:
#    name: capi-network
#
#volumes:
#  zookeeper-data:
#    driver: local
#  zookeeper-log:
#    driver: local
#  kafka-data:
#    driver: local
